=========================================На сервере=========================================
// Инструмент перезагрузки сервера при изменении файлов
npm install nodemon --save-dev
//Запуск скриптов, которые устанавливают и используют переменные среды на разных платформах
npm install --save-dev cross-env


// ORM sequelize
npm install --save sequelize
npm install --save pg pg-hstore # Postgres
npm install --save sequelize-cli
// To create an empty project you will need to execute init command
npx sequelize init
npx sequelize model:generate --name sms --attributes id:integer,phone:string,text:string

// Развертывание проекта в production на heroku
В файле package.json добавлен скрипт
    "heroku-postbuild": "NPM_CONFIG_PRODUCTION=false npm run client-install && npm run client-build"
и версии инструментов для запуска
    "engines": {
        "node": "11.3.0",
        "npm": "6.4.1"
    },

// Сокеты
npm install socket.io

// Авторизация стратегия Google
npm install passport passport-google-oauth
// middleware cookie. Хранит информацию об авторизации
npm i cookie-session
=========================================


=========================================На клиенте=========================================
// Проверка на типы, email, phone и др.
npm i is_js
// Отправка запросов на сервер
npm i axios
// Анимация загрузки
https://loading.io/css

// Поддержка sass, файлов .scss
yarn add node-sass

В файле webpack.config.js добавлена поддержка модулей sass: modules: true, getLocalIdent: getCSSModuleLocalIdent
		{
		  test: sassRegex,
		  exclude: sassModuleRegex,
		  use: getStyleLoaders(
			{
			  importLoaders: 2,
			  sourceMap: isEnvProduction && shouldUseSourceMap,
			  modules: true,
			  getLocalIdent: getCSSModuleLocalIdent,
			},
			'sass-loader'
		  ),
		  // Don't consider CSS imports dead code even if the
		  // containing package claims to have no side effects.
		  // Remove this when webpack adds a warning or an error for this.
		  // See https://github.com/webpack/webpack/issues/6571
		  sideEffects: true,
		},

// npm install --save-dev cross-env
В файле env.js добавлена переменная окружения API_URL: process.env.API_URL || '',
описание запуска см. в package.json -> "start": "cross-env API_URL=http://localhost:5500 node scripts/start.js"
        function getClientEnvironment(publicUrl) {
          const raw = Object.keys(process.env)
            .filter(key => REACT_APP.test(key))
            .reduce(
              (env, key) => {
                env[key] = process.env[key];
                return env;
              },
              {
                // Useful for determining whether we’re running in production mode.
                // Most importantly, it switches React into the correct mode.
                NODE_ENV: process.env.NODE_ENV || 'development',
                // Useful for resolving the correct path to static assets in `public`.
                // For example, <img src={process.env.PUBLIC_URL + '/img/logo.png'} />.
                // This should only be used as an escape hatch. Normally you would put
                // images into the `src` and `import` them in code to get their paths.
                PUBLIC_URL: publicUrl,
                API_URL: process.env.API_URL || '',
              }
            );
          // Stringify all values so we can feed into Webpack DefinePlugin
          const stringified = {
            'process.env': Object.keys(raw).reduce((env, key) => {
              env[key] = JSON.stringify(raw[key]);
              return env;
            }, {}),
          };

          return { raw, stringified };
        }

// Redux — библиотека управления состоянием для приложений, написанных на JavaScript
npm i redux react-redux redux-thunk
// Роутинг
npm i react-router-dom

// Установить клиентскую версию библиотеки Socket.io
npm i --save socket.io-client

// Подключение стилей, иконки https://fontawesome.com/how-to-use/on-the-web/setup/hosting-font-awesome-yourself

// Работа с кукамм
npm i react-cookie
=========================================
